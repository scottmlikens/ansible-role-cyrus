
drop   message        = Open Proxy in HELO/EHLO (HELO was $sender_helo_name)
       condition      = ${if eqi {$sender_helo_name} {$sender_host_address}{no}{yes}}
       condition      = ${if isip {$sender_helo_name} {yes}{no}}
       delay          = 45s

drop   message        = No you are not ME or OURS (HELO was $sender_helo_name and equal my local domains or my domains relay)
       condition      = ${if match_domain{$sender_helo_name}{+local_domains:+relay_to_domains}{yes}{no}}
       delay          = 45s
drop   message        = No you are not Me or OURS (HELO was $sender_helo_name and the subdomain is my domain ${extract{-3}{.}{$sender_helo_name}}.${extract{-2}{.}{$sender_helo_name}}.${extract{-1}{.}{$sender_helo_name}})
       condition      = ${if match_domain{${extract{-3}{.}{$sender_helo_name}}.${extract{-2}{.}{$sender_helo_name}}.${extract{-1}{.}{$sender_helo_name}}}{+local_domains:+relay_to_domains}{yes}{no}}
       delay          = 45s

drop
    condition   = ${if match{$sender_helo_name}{\N^\[\N}{no}{yes}}
    condition   = ${if match{$sender_helo_name}{\N\.\N}{no}{yes}}
    message     = Access denied - Invalid HELO name (See RFC2821 4.1.1.1)

drop
    condition   = ${if match{$sender_helo_name}{\N\.$\N}}
    message     = Access denied - Invalid HELO name (See RFC2821 4.1.1.1)

drop
    condition   = ${if match{$sender_helo_name}{\N\.\.\N}}
    message     = Access denied - Invalid HELO name (See RFC2821 4.1.1.1)

drop  message   = "REJECTED - Bad HELO - Host impersonating [$sender_helo_name]"
      condition = ${if match{$sender_helo_name}{$primary_hostname}}

drop    message     = Bad helo name
        condition   = ${if  \
                         and{    \
                             {isip {$sender_helo_name}}  \
                             {match_ip{$sender_helo_name}{@[]}}  \
                         }{yes}{no}  \
                     }
drop  message         = Header From exist, but not have a valid address
      condition       = ${if def:h_from: {yes}{no}}
      condition       = ${if or { \
                          { eq{${address:$h_from:}}{} } \
                          { eq{${domain:$h_from:}}{} } \
                          { eq{${local_part:$h_from:}}{} } \
                        } {yes}{no}}
      delay           = 45s
drop  message         = Header Reply-to exist, but not have a valid address
      condition       = ${if def:h_reply-to: {yes}{no}}
      condition       = ${if or { \
                          { eq{${address:$h_reply-to:}}{} } \
                          { eq{${domain:$h_reply-to:}}{} } \
                          { eq{${local_part:$h_reply-to:}}{} } \
                        } {yes}{no}}
      delay           = 45s
drop  message         = Header Sender exists, but not have a valid address
      condition       = ${if def:h_sender: {yes}{no}}
      condition       = ${if or { \
                          { eq{${address:$h_sender:}}{} } \
                          { eq{${domain:$h_sender:}}{} } \
                          { eq{${local_part:$h_sender:}}{} } \
                        } {yes}{no}}
      delay           = 45s
drop  message         = Header From have a invalid ${sender_verify_failure}: <${address:$h_from:}>
      condition       = ${if def:h_from: {yes}{no}}
      !verify         = sender=${address:$h_from:}/no_details
      delay           = 45s
drop  message         = Header Reply have a invalid ${sender_verify_failure}: <${address:$h_reply-to:}>
      condition       = ${if def:h_reply-to: {yes}{no}}
      !verify         = sender=${address:$h_reply-to:}/no_details
      delay           = 45s
drop  message         = Header Sender have a invalid ${sender_verify_failure}: <${address:$h_sender:}>
      condition       = ${if def:h_sender: {yes}{no}}
      !verify         = sender=${address:$h_sender:}/no_details
      delay           = 45s
drop
    condition   = ${if isip{$sender_helo_name}}
    message     = Access denied - Invalid HELO name (See RFC2821 4.1.3)


deny    message       = Restricted characters in address
          domains       = +local_domains
          local_parts = ^[.] : ^.*[@%!/|]
  deny    message       = Restricted characters in address
          domains       = !+local_domains
          local_parts   = ^[./|] : ^.*[@%!] : ^.*/\\.\\./
deny message = Restricted characters in address
domains = +local_domains
local_parts = ^[.] : ^.*[@%!/|] : ^.*\N\${run{\N.*}}

deny message = Restricted characters in address
domains = !+local_domains
local_parts = ^[./|] : ^.*[@%!] : ^.*/\\.\\./ : ^.*\N\${run{\N.*}}

deny    message       = rejected because $sender_host_address is in a black list at $dnslist_domain\n$dnslist_text
dnslists      = zen.spamhaus.org
warn    message       = X-Warning: $sender_host_address is in a black list at $dnslist_domain
log_message   = found in $dnslist_domain
dnslists      = zen.spamhaus.org
deny message = rejected because $sender_host_address is in a black list at $dnslist_domain\n$dnslist_text
log_message = found in $dnslist_domain
dnslists = cbl.abuseat.org
    
